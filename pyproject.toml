[project]
name = "cuda-pronunciation-similarity"
version = "1.0.0"
description = "CUDA-accelerated pronunciation similarity system for vocabulary quiz generation"
requires-python = ">=3.10"
authors = [
    {name = "Brian", email = "your@email.com"}
]
readme = "README.md"
license = {text = "MIT"}
keywords = ["pronunciation", "phonetics", "similarity", "cuda", "vocabulary", "quiz", "nlp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Education",
    "Topic :: Text Processing :: Linguistic",
]

dependencies = [
    # Core dependencies
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "mysql-connector-python>=9.0.0",
    "python-levenshtein>=0.25.0",
    "tqdm>=4.65.0",
    "requests>=2.30.0",
    
    # Optional CUDA support
    "cupy-cuda12x>=13.0.0; platform_system=='Linux' or platform_system=='Windows'",
    
    # CLI and utilities
    "click>=8.1.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
    
    # API support (optional)
    "fastapi>=0.110.0",
    "uvicorn>=0.25.0",
]

[project.optional-dependencies]
cuda11 = ["cupy-cuda11x>=13.0.0"]
cuda12 = ["cupy-cuda12x>=13.0.0"]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.scripts]
pronunciation-similarity = "pronunciation_cli:main"
cuda-pronunciation = "cuda_enhanced_cli:main"

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["pronunciation_*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=pronunciation --cov-report=term-missing"
